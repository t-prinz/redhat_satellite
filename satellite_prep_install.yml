---
- name: Ensure Satellite systems are registered with access to required repositories, the firewall is set up, and the base software is installed
  hosts: "{{ hostlist | default('all') }}"
  become: true
  vars:
    satellite_version: 6.17
    install_openscap_content: true

  tasks:

    - name: Ensure the target is a Red Hat system
      ansible.builtin.assert:
        that:
          - ansible_facts.distribution is defined
          - ansible_facts.distribution == "RedHat"
          - ansible_facts.distribution_major_version is defined
        fail_msg: "The target host must be a Red Hat host"

    - name: Define supplemental repos that need to be enabled for RHEL 7 and Satellite 6.8 - 6.10
      ansible.builtin.set_fact:
        rhportal_reg_rhsm_supplemental_repo_list:
          - "rhel-7-server-satellite-{{ satellite_version }}-rpms"
          - "rhel-7-server-satellite-maintenance-6-rpms"
          - "rhel-server-rhscl-7-rpms"
          - "rhel-7-server-ansible-2.9-rpms"
      when: ansible_facts.distribution_major_version == "7" and
            satellite_version < 6.11

    - name: Define supplemental repos that need to be enabled for RHEL 7 and Satellite 6.11
      ansible.builtin.set_fact:
        rhportal_reg_rhsm_supplemental_repo_list:
          - "rhel-7-server-satellite-{{ satellite_version }}-rpms"
          - "rhel-7-server-satellite-maintenance-6.11-rpms"
          - "rhel-server-rhscl-7-rpms"
          - "rhel-7-server-ansible-2.9-rpms"
      when: ansible_facts.distribution_major_version == "7" and
            satellite_version == 6.11

    - name: Define supplemental repos that need to be enabled for RHEL 8 or RHEL 9
      ansible.builtin.set_fact:
        rhportal_reg_rhsm_supplemental_repo_list:
          - "satellite-{{ satellite_version }}-for-rhel-{{ ansible_facts.distribution_major_version }}-x86_64-rpms"
          - "satellite-maintenance-{{ satellite_version }}-for-rhel-{{ ansible_facts.distribution_major_version }}-x86_64-rpms"
      when: ansible_facts.distribution_major_version == "8" or
            ansible_facts.distribution_major_version == "9"

    - name: Define incoming firewall ports to open for 6.8 and 6.9
      ansible.builtin.set_fact:
        satellite_incoming_firewall_ports:
          - "80/tcp"
          - "443/tcp"
          - "5646/tcp"
          - "5647/tcp"
          - "8000/tcp"
          - "8140/tcp"
          - "9090/tcp"
          - "7/tcp"
          - "7/udp"
          - "53/tcp"
          - "53/udp"
          - "67/udp"
          - "69/udp"
          - "5000/tcp"
      when: satellite_version >= 6.8 and
            satellite_version <= 6.9

    - name: Define incoming firewall ports to open for 6.10
      ansible.builtin.set_fact:
        satellite_incoming_firewall_ports:
          - "53/tcp"
          - "53/udp"
          - "67/udp"
          - "69/udp"
          - "443/tcp"
          - "80/tcp"
          - "5646/tcp"
          - "5910-5930/tcp"
          - "8000/tcp"
          - "8140/tcp"
          - "8443/tcp"
          - "9090/tcp"
      when: satellite_version == 6.10

    - name: Define incoming firewall ports to open for 6.11
      ansible.builtin.set_fact:
        satellite_incoming_firewall_ports:
          - "53/tcp"
          - "53/udp"
          - "67/udp"
          - "69/udp"
          - "443/tcp"
          - "80/tcp"
          - "5646/tcp"
          - "5910-5930/tcp"
          - "8000/tcp"
          - "8140/tcp"
          - "9090/tcp"
      when: satellite_version == 6.11

    - name: Define incoming firewall ports to open for 6.12 - 6.14
      ansible.builtin.set_fact:
        satellite_incoming_firewall_ports:
          - "53/tcp"
          - "53/udp"
          - "67/udp"
          - "69/udp"
          - "443/tcp"
          - "80/tcp"
          - "1883/tcp"
          - "5646/tcp"
          - "5647/tcp"
          - "5910-5930/tcp"
          - "8000/tcp"
          - "8140/tcp"
          - "9090/tcp"
      when: satellite_version >= 6.12 and
            satellite_version <= 6.14

    - name: Define incoming firewall ports to open for 6.15 - 6.17
      ansible.builtin.set_fact:
        satellite_incoming_firewall_ports:
          - "53/tcp"
          - "53/udp"
          - "67/udp"
          - "69/udp"
          - "443/tcp"
          - "80/tcp"
          - "1883/tcp"
          - "5910-5930/tcp"
          - "8000/tcp"
          - "8140/tcp"
          - "9090/tcp"
      when: satellite_version >= 6.15 and
            satellite_version <= 6.17

    - name: Ensure system is registered with RHSM and that the proper repos are enabled
      ansible.builtin.include_role:
        name: rhportal_reg

    - name: Block for RHEL 8
      block:

        - name: Enable the Satellite module
          ansible.builtin.command:
            cmd: "dnf module enable -y satellite:el8"

        - name: Ensure RHEL release version is not set
          ansible.builtin.command: "subscription-manager release --unset"

      when: ansible_facts.distribution_major_version == "8"

    - name: Ensure firewalld is installed
      ansible.builtin.yum:
        name: firewalld
        state: installed

    - name: Ensure firewalld is enabled and started
      ansible.builtin.service:
        name: firewalld
        enabled: True
        state: started

    - name: Ensure firewall ports are open
      ansible.posix.firewalld:
        immediate: True
        permanent: True
        port: "{{ item }}"
        state: enabled
      with_items: "{{ satellite_incoming_firewall_ports }}"

    - name: Ensure kernel is up-to-date; if so a reboot will occur
      ansible.builtin.yum:
        name: kernel
        state: latest
      register: kernel_status

    - name: Reboot server if needed
      ansible.builtin.reboot:
      when: kernel_status.changed

    - name: Ensure all packages are updated
      ansible.builtin.yum:
        name: '*'
        state: latest

    - name: Ensure Satellite and other software is installed (satellite is the only required package starting with 6.16)
      ansible.builtin.yum:
        name: "{{ satellite_sw_list }}"
        state: latest
      vars:
        satellite_sw_list:
          - satellite
          - chrony
          - sos
          - rhel-system-roles
#          - screen

    - name: Ensure chronyd is enabled and started (not listed as a requirement for Satellite 6.16)
      ansible.builtin.service:
        name: chronyd
        enabled: True
        state: started

    - name: Print Satellite installation parameters
      ansible.builtin.debug:
        msg: "{{ satellite_username }}, {{ satellite_password }}, {{ satellite_organization }}, {{ satellite_location }} {{ satellite_manifest_path }}"
        verbosity: 1

    - name: Install Satellite; wait for up to an hour to complete
      ansible.builtin.command: "satellite-installer --scenario satellite --foreman-initial-organization {{ satellite_organization }} --foreman-initial-location {{ satellite_location }} --foreman-initial-admin-username {{ satellite_username }} --foreman-initial-admin-password {{ satellite_password }}"
      register: satellite_install_output
      ignore_errors: yes
      async: 3600
      poll: 60

    - name: Print installation output
      ansible.builtin.debug:
        var: satellite_install_output
        verbosity: 1

    - name: Check on installation and fail the play if the installation failed
      ansible.builtin.debug:
        msg: "Satellite installation failed; failing play"
      when: satellite_install_output.failed
      failed_when: satellite_install_output.failed

    - name: Install default OpenSCAP content for 6.8 - 6.10
      ansible.builtin.command: "foreman-rake foreman_openscap:bulk_upload:default"
      when: install_openscap_content and
            satellite_version >= 6.8 and
            satellite_version <= 6.10

    - name: Install default OpenSCAP content for 6.11 - 6.17
      ansible.builtin.command: "hammer scap-content bulk-upload --type default"
      when: install_openscap_content and
            satellite_version >= 6.11 and
            satellite_version <= 6.17
